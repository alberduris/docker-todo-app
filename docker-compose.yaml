version: "3.7"

services:
   app: # Define the service entry name 
     image: node:12-alpine # and the image for the container
     command: sh -c "yarn install && yarn run dev" # Usually put the "command" next to the "image"
     ports:
       - 80:3000 # The port mapping
     working_dir: /app # On Docker compose relative paths from current directory can be used
     volumes:
       - ./:/app
     environment: # Environment variables definitions
       MYSQL_HOST: mysql
       MYSQL_USER: root
       MYSQL_PASSWORD: secret
       MYSQL_DB: todos
       
   mysql: # Name it mysql so it automatically gets the network alias
      image: mysql:5.7  # and the image
         # When we ran the container with docker run, the named volume was created automatically. However, that doesn’t happen when running with Compose. We need to define the volume in the top-level volumes: section and then specify the mountpoint in the service config.
      volumes: 
         - todo-mysql-data:/var/lib/mysql
      environment: # Environment variables
         MYSQL_ROOT_PASSWORD: secret
         MYSQL_DATABASE: todos

volumes:
   todo-mysql-data: